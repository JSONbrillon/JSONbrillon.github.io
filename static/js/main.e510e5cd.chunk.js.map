{"version":3,"sources":["norway.jpg","Resume.pdf","About.tsx","SocialFooter.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","About","AboutWrapper","Header","Summary","Links","Link","href","Resume","target","styled","section","h1","p","div","a","SocialFooter","useState","activeIndex","setActiveIndex","styles","width","height","Footer","SocialIcons","map","url","index","IconWrapper","role","onMouseEnter","onMouseLeave","key","bgColor","style","footer","props","ul","App","PageWrapper","Norway","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,63DCK5B,SAASC,IACpB,OACI,kBAACC,EAAD,KACI,kBAACC,EAAD,sBACA,kBAACC,EAAD,yGAGA,kBAACC,EAAD,KACI,kBAACC,EAAD,CAAMC,KAAK,iCAAX,WACA,kBAACD,EAAD,CAAMC,KAAMC,IAAQC,OAAO,UAA3B,YAMhB,IAAMP,EAAeQ,IAAOC,QAAV,KAcZR,EAASO,IAAOE,GAAV,KAaNR,EAAUM,IAAOG,EAAV,KAiBPR,EAAQK,IAAOI,IAAV,KAMLR,EAAOI,IAAOK,EAAV,K,ycClEK,SAASC,IAAgB,IAAD,EACGC,oBAAU,GADb,mBAC5BC,EAD4B,KACfC,EADe,KAO7BC,EAAwB,CAC1BC,MAAO,OACPC,OAAQ,QAEZ,OACI,kBAACC,EAAD,KACI,kBAACC,EAAD,KAXY,CAChB,4CACA,yCACA,kCASqBC,KAAI,SAACC,EAAKC,GAAN,OACb,kBAACC,EAAD,CACIV,YAAaA,EACbS,MAAOA,EACPE,KAAK,SACLC,aAAc,kBAAMX,EAAeQ,IACnCI,aAAc,kBAAMZ,GAAgB,KAEpC,kBAAC,aAAD,CAAYa,IAAG,sBAAiBL,GAASD,IAAKA,EAAKO,QAAQ,QAAQC,MAAOd,UAOlG,IAAMG,EAASb,IAAOyB,OAAV,KAMNP,EAAclB,IAAOI,IAAV,KAIF,SAACsB,GAAD,OAAoD,IAAvBA,EAAMlB,aAAsBkB,EAAMlB,cAAgBkB,EAAMT,MAAQ,EAAI,MAI1GH,EAAcd,IAAO2B,GAAV,K,qTCzCF,SAASC,IACpB,OACI,kBAACC,EAAD,KACI,kBAACtC,EAAD,MACA,kBAACe,EAAD,OAKZ,IAAMuB,EAAc7B,IAAOI,IAAV,IAC+D0B,KCJ5DC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACV,EAAD,OAEFW,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e510e5cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/norway.79c308b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Resume.62f14c49.pdf\";","import React from 'react';\nimport styled from 'styled-components';\n// @ts-ignore\nimport Resume from './Resume.pdf';\n\nexport default function About() {\n    return (\n        <AboutWrapper>\n            <Header>Jason Brillon</Header>\n            <Summary>\n                Senior Software Engineer with a passion for travel, foreign languages, and contemporary fiction.\n            </Summary>\n            <Links>\n                <Link href=\"mailto:JSON.brillon@gmail.com\">Contact</Link>\n                <Link href={Resume} target=\"_blank\">Resume</Link>\n            </Links>\n        </AboutWrapper>\n    );\n}\n\nconst AboutWrapper = styled.section`\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    margin: 0 auto;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    text-align: center;\n    max-width: 1000px;\n    color: white;\n`;\n\nconst Header = styled.h1`\n    font-size: 80px;\n    font-family: Lato;\n    margin: 0;\n    font-weight: 300;\n    @media(max-width: 1020px) {\n        font-size: 60px;\n    }\n    @media(max-width: 768px) {\n        font-size: 40px;\n    }\n`;\n\nconst Summary = styled.p`\n    font-size: 32px;\n    font-family: Lato;\n    line-height: 38px;\n    margin: 20px 0;\n    font-weight: 300;\n    @media(max-width: 1020px) {\n        font-size: 28px;\n        line-height: 32px;\n    }\n    @media(max-width: 768px) {\n        font-size: 24px;\n        line-height: 28px;\n        margin: 40px 0;\n    }\n`;\n\nconst Links = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 220px;\n`;\n\nconst Link = styled.a`\n    color: white;\n    text-decoration: none;\n    font-family: Lato;\n    font-size: 20px;\n    font-weight: 300;\n    line-height: 24px;\n    cursor: pointer;\n    text-transform: uppercase;\n    letter-spacing: 1.1px;\n    &:hover {\n        border-bottom: 1px solid;\n        margin-bottom: -1px;\n    }\n    @media(max-width: 1020px) {\n        font-size: 18px;\n        line-height: 22px;\n    }\n    @media(max-width: 768px) {\n        font-size: 14px;\n        line-height: 18px;\n    }\n`;\n","import React, { CSSProperties, useState } from 'react';\nimport styled from 'styled-components';\nimport { SocialIcon } from 'react-social-icons';\n\nexport default function SocialFooter() {\n    const [activeIndex, setActiveIndex] = useState(-1);\n    const socialLinks = [\n        'https://www.linkedin.com/in/jason-brillon',\n        'https://www.facebook.com/brillon.jason',\n        'https://github.com/JSONbrillon',\n    ];\n    const styles: CSSProperties = {\n        width: '40px',\n        height: '40px',\n    };\n    return (\n        <Footer>\n            <SocialIcons>\n                {socialLinks.map((url, index) =>\n                    <IconWrapper\n                        activeIndex={activeIndex}\n                        index={index}\n                        role=\"button\"\n                        onMouseEnter={() => setActiveIndex(index)}\n                        onMouseLeave={() => setActiveIndex(-1)}\n                    >\n                        <SocialIcon key={`social-icon-${index}`} url={url} bgColor=\"white\" style={styles} />\n                    </IconWrapper>)}\n            </SocialIcons>\n        </Footer>\n    );\n}\n\nconst Footer = styled.footer`\n    position: absolute;\n    bottom: 20px;\n    right: 20px;\n`;\n\nconst IconWrapper = styled.div`\n    padding: 0 4px;\n    width: 40px;\n    height: 40px;\n    opacity: ${(props: IconWrapperProps) => props.activeIndex === -1 || props.activeIndex === props.index ? 1 : 0.5};\n    transition: opacity ease 0.3s;\n`;\n\nconst SocialIcons = styled.ul`\n    margin: 0;\n    padding: 0;\n    display: flex;\n`;\n\ninterface IconWrapperProps {\n    activeIndex: number;\n    index: number;\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Norway from './norway.jpg';\nimport About from './About';\nimport SocialFooter from './SocialFooter';\n\nexport default function App() {\n    return (\n        <PageWrapper>\n            <About />\n            <SocialFooter />\n        </PageWrapper>\n    );\n}\n\nconst PageWrapper = styled.div`\n    background: linear-gradient( rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2)), url(${Norway});\n    background-position: center;\n    background-repeat: no-repeat;\n    background-offset-top: 100px;\n    background-size: cover;\n    height: 100vh;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}